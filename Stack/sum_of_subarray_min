class Solution {
private:
    class Snode{
        public:
        Snode (int v, int c, int s) {
            val = v;
            count = c;
            sum = s;
        }
        int val;
        int count;
        int sum;
    };
public:
    int sumSubarrayMins(vector<int>& arr) {
        stack<Snode> stk;
        int result = 0;
        int mod = 1000000000+7;
        for (int i=0; i<arr.size(); i++) {
            Snode x(arr[i], 1, arr[i]);
            while (stk.size() > 0 && arr[i] <= stk.top().val) {
                x.count +=stk.top().count;
                stk.pop();
            }
            x.sum = arr[i]*x.count;
            if (stk.size() > 0) {
                x.sum = (stk.top().sum + x.sum)%mod;
            }
            result = (result + x.sum)%mod;
            stk.push(x);
        }
        return result%mod;
    }
};
